options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: five_ant_correlation
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: int(2.56e6)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 12.0]
    rotation: 0
    state: enabled
- name: to_phase
  id: variable
  parameters:
    comment: ''
    value: 'lambda x: complex(math.cos(math.radians(x)),math.sin(math.radians(x)))'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 844.0]
    rotation: 0
    state: true
- name: blocks_complex_to_float_0
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2176, 104.0]
    rotation: 0
    state: true
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: d0
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 416.0]
    rotation: 0
    state: true
- name: blocks_delay_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: d1
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 496.0]
    rotation: 0
    state: true
- name: blocks_delay_0_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: d2
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 576.0]
    rotation: 0
    state: true
- name: blocks_delay_0_0_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: d3
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 656.0]
    rotation: 0
    state: true
- name: blocks_delay_0_0_0_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: d4
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 736.0]
    rotation: 0
    state: true
- name: blocks_interleave_0
  id: blocks_interleave
  parameters:
    affinity: ''
    alias: ''
    blocksize: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2448, 104.0]
    rotation: 0
    state: true
- name: blocks_keep_one_in_n_0
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: samp_rate
    type: complex
    vlen: '10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1712, 132.0]
    rotation: 0
    state: true
- name: blocks_multiply_conjugate_cc_0
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_0
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1648.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_1
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1072.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_2
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_3
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_4
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_5
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1408.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_6
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1488.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_7
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1568.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_conjugate_cc_0_8
  id: blocks_multiply_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984.0, 288]
    rotation: 90
    state: true
- name: blocks_multiply_const_xx_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: to_phase(p1)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 492.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: to_phase(p4)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 708.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0_1
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: to_phase(p2)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 564.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0_2
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: to_phase(p3)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 636.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_xx_0_3
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: to_phase(p0)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 420.0]
    rotation: 0
    state: true
- name: blocks_streams_to_vector_0
  id: blocks_streams_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '10'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128.0, 40]
    rotation: 90
    state: true
- name: blocks_vector_to_stream_0
  id: blocks_vector_to_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '10'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1936, 116.0]
    rotation: 0
    state: true
- name: d0
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 0 Delay
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 836.0]
    rotation: 0
    state: true
- name: d1
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 1 Delay
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 836.0]
    rotation: 0
    state: true
- name: d2
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 2 Delay
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 836.0]
    rotation: 0
    state: true
- name: d3
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 3 Delay
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 836.0]
    rotation: 0
    state: true
- name: d4
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 4 Delay
    short_id: ''
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 836.0]
    rotation: 0
    state: true
- name: freq
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Center Frequency"'
    short_id: ''
    type: eng_float
    value: 1420.4058e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 1052.0]
    rotation: 0
    state: true
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 12.0]
    rotation: 0
    state: true
- name: kaddr
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Address of KrakenSDR Server"'
    short_id: ''
    type: str
    value: '"127.0.0.1"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 1052.0]
    rotation: 0
    state: true
- name: krakensdr_krakensdr_source_0
  id: krakensdr_krakensdr_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ctrlPort: '5001'
    debug: 'False'
    freq: freq
    gain: '[rfgain]*5'
    ipAddr: kaddr
    maxoutbuf: '0'
    minoutbuf: '0'
    numChannels: '5'
    port: '5000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 496.0]
    rotation: 0
    state: true
- name: longitude
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Longitude
    short_id: ''
    type: eng_float
    value: '-76.03'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 948.0]
    rotation: 0
    state: true
- name: me_logger
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport time\nimport ra_funcs\n\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"A slow data textual formatter\n          inputs are expected to be science-data\n\
      \             Parameters:\n                formatter - pointer to a custom formatter\
      \ function\n                filepat - pattern used for formatting filename must\
      \ provide converters for YYYY MM DD\n                extension - filename extension\n\
      \                logtime - how often to log, in seconds\n                fmtstr\
      \ - formatter for data values -- most provide converters for both values\n \
      \               nchan - number of interleaved channels on input\"\"\"\n    \
      \            \n                \n\n    def __init__(self, formatter=None, filepat=\"\
      foonly-%d%d%d\", extension=\".csv\", \n        logtime=10,fmtstr=\"%11.9f\"\
      ,nchan=1,localtime=False,longitude=-76.03, legend=None):  # only default arguments\
      \ here\n        \"\"\"arguments to this function show up as parameters in GRC\"\
      \"\"\n        gr.sync_block.__init__(\n            self,\n            name='Correlator:\
      \ Data Logger',   # will show up in GRC\n            in_sig=[np.float32],\n\
      \            out_sig=None\n        )\n        # if an attribute with the same\
      \ name as a parameter is found,\n        # a callback is registered (properties\
      \ work, too).\n        \n        #\n        # Formatter is a function pointer--very\
      \ often 'None'\n        #\n        self.formatter = formatter\n        \n  \
      \      #\n        # Controls the template for filename generation\n        #\n\
      \        self.filepat= filepat\n        \n        #\n        # The filename\
      \ extension\n        #\n        self.extension=extension\n        \n       \
      \ #\n        # The logging interval\n        #\n        self.logtime=logtime\n\
      \        \n        \n        #\n        # The data-item formatting string\n\
      \        #      \n        self.fmtstr = fmtstr\n        \n        #\n      \
      \  # How many (interleaved) channels\n        self.nchan = nchan\n        \n\
      \        #\n        # Use local time, rather than UTC/GMT?\n        #\n    \
      \    self.localtime = localtime\n        \n        #\n        # The averaing\
      \ cells\n        #\n        self.avg = [0.0]*nchan\n        self.acnt = [0]*nchan\n\
      \n        \n        #\n        # Keep track of the next channel's averaging\
      \ cell we\n        #  need to update\n        #\n        self.cndx = 0\n   \
      \     \n        \n        #\n        # This isn't strictly required, since the\
      \ work function code\n        #  will take care of whatever items it gets presented\
      \ with.\n        #\n        self.set_output_multiple(nchan)\n        \n    \
      \    self.now = time.time()\n        \n        self.longitude = longitude\n\
      \        \n        self.legend = legend\n        \n        self.legcount = 0\n\
      \        self.fn = \"\"\n        self.curlegend = legend\n\n    def work(self,\
      \ input_items, output_items):\n        \n        if (self.localtime == False):\n\
      \            ltp = time.gmtime()\n        else:\n            ltp = time.localtime()\n\
      \        \n        #\n        # Distribute the input items over the averaging\
      \ buffer as appropriate\n        #  We assume that the input is interleaved\
      \ by 'nchan'\n        #  We use 'self.cndx' to keep track of which channel's\
      \ averaging\n        #  cell we need to put the next value in.\n        #\n\
      \        # Because GR's scheduler has no idea what our internal \"shape\"\n\
      \        #  is, it can hand us many, or a few, items, every time we're\n   \
      \     #  called.\n        #\n        for x in range(len(input_items[0])):\n\
      \            self.avg[self.cndx % self.nchan] += input_items[0][x]\n       \
      \     self.acnt[self.cndx % self.nchan] += 1\n            \n            #\n\
      \            # Increment and modularly reduce cndx\n            #\n        \
      \    self.cndx += 1\n            self.cndx %= self.nchan\n            \n\n \
      \       if ((time.time() - self.now) > self.logtime):\n            self.now\
      \ = time.time()\n            if (self.formatter == None):\n                fn\
      \ = self.filepat % (ltp.tm_year, ltp.tm_mon, ltp.tm_mday) + self.extension\n\
      \                fp = open(fn, \"a\")\n                #\n                #\
      \ Filename has changed (new date) or\n                #  legend has changed\
      \ (new DEC/FREQ/BW) or\n                #  legcount >= 30\n                #\n\
      \                wrlegend = False\n                if (self.fn != fn):\n   \
      \                 self.fn = fn\n                    wrlegend = True\n      \
      \          elif (self.curlegend != self.legend):\n                    self.curlegend\
      \ = self.legend\n                    wrlegend = True\n                elif (self.legcount\
      \ >= 30):\n                    wrlegend = True\n                    self.legcount\
      \ = 0\n                if (wrlegend == True and self.legend != None):\n    \
      \                self.legcount = 0\n                    fp.write(\"INFO:%s\\\
      n\" % self.legend)\n                    \n                fp.write(\"%02d,%02d,%02d,\"\
      \ % (ltp.tm_hour, ltp.tm_min, ltp.tm_sec))\n                fp.write(\"%s,\"\
      \ % ra_funcs.cur_sidereal(self.longitude))\n                for x in range(self.nchan):\n\
      \                    self.avg[x] /= self.acnt[x]\n                    self.acnt[x]\
      \ = 1\n                    fp.write (self.fmtstr  % (self.avg[x]))\n       \
      \             if (x < self.nchan-1):\n                        fp.write(\",\"\
      )\n                fp.write(\"\\n\")\n                self.legcount += 1\n \
      \               \n                    \n                fp.close()\n  \n   \
      \         else:\n                self.formatter(self.filepat,self.extension,self.avg[0],self.avg[1])\n\
      \            \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    extension: '".csv"'
    filepat: prefix+'corr-%04d%02d%02d'
    fmtstr: '''%11.9f'''
    formatter: None
    legend: '"UTC,LMST,CH0_R,CH0_I,CH1_R,CH1_I,CH2_R,CH2_I,..."+"FREQ=%7.2f" % (freq/1.0e6)+",BW=%7.2f"
      % (samp_rate/1.0e6)'
    localtime: '0'
    logtime: '10'
    longitude: longitude
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '20'
  states:
    _io_cache: '(''Correlator: Data Logger'', ''blk'', [(''formatter'', ''None''),
      (''filepat'', "''foonly-%d%d%d''"), (''extension'', "''.csv''"), (''logtime'',
      ''10''), (''fmtstr'', "''%11.9f''"), (''nchan'', ''1''), (''localtime'', ''False''),
      (''longitude'', ''-76.03''), (''legend'', ''None'')], [(''0'', ''float'', 1)],
      [], ''A slow data textual formatter\n          inputs are expected to be science-data\n             Parameters:\n                formatter
      - pointer to a custom formatter function\n                filepat - pattern
      used for formatting filename must provide converters for YYYY MM DD\n                extension
      - filename extension\n                logtime - how often to log, in seconds\n                fmtstr
      - formatter for data values -- most provide converters for both values\n                nchan
      - number of interleaved channels on input'', [''extension'', ''filepat'', ''fmtstr'',
      ''formatter'', ''legend'', ''localtime'', ''logtime'', ''longitude'', ''nchan''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2664, 44.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: Delay blocks to compensate coarse cable imbalance
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 316.0]
    rotation: 0
    state: true
- name: note_0_0
  id: note
  parameters:
    alias: ''
    comment: Complex multiplies to compensate fine phase delay
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 756.0]
    rotation: 0
    state: true
- name: p0
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 0 Phase
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 948.0]
    rotation: 0
    state: true
- name: p1
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 1 Phase
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 948.0]
    rotation: 0
    state: true
- name: p2
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 2 Phase
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 948.0]
    rotation: 0
    state: true
- name: p3
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 3 Phase
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [424, 948.0]
    rotation: 0
    state: true
- name: p4
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Chan 4 Phase
    short_id: ''
    type: eng_float
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 948.0]
    rotation: 0
    state: true
- name: prefix
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Fike Prefix"'
    short_id: ''
    type: str
    value: '"./"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 948.0]
    rotation: 0
    state: true
- name: rfgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"RF Gain"'
    short_id: ''
    type: eng_float
    value: '35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 1052.0]
    rotation: 0
    state: true
- name: single_pole_iir_filter_xx_0
  id: single_pole_iir_filter_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: 1.0/(samp_rate)
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1520, 12.0]
    rotation: 0
    state: true

connections:
- [blocks_complex_to_float_0, '0', blocks_interleave_0, '0']
- [blocks_complex_to_float_0, '1', blocks_interleave_0, '1']
- [blocks_delay_0, '0', blocks_multiply_const_xx_0_3, '0']
- [blocks_delay_0_0, '0', blocks_multiply_const_xx_0, '0']
- [blocks_delay_0_0_0, '0', blocks_multiply_const_xx_0_1, '0']
- [blocks_delay_0_0_0_0, '0', blocks_multiply_const_xx_0_2, '0']
- [blocks_delay_0_0_0_0_0, '0', blocks_multiply_const_xx_0_0, '0']
- [blocks_interleave_0, '0', me_logger, '0']
- [blocks_keep_one_in_n_0, '0', blocks_vector_to_stream_0, '0']
- [blocks_multiply_conjugate_cc_0, '0', blocks_streams_to_vector_0, '0']
- [blocks_multiply_conjugate_cc_0_0, '0', blocks_streams_to_vector_0, '9']
- [blocks_multiply_conjugate_cc_0_1, '0', blocks_streams_to_vector_0, '2']
- [blocks_multiply_conjugate_cc_0_2, '0', blocks_streams_to_vector_0, '3']
- [blocks_multiply_conjugate_cc_0_3, '0', blocks_streams_to_vector_0, '4']
- [blocks_multiply_conjugate_cc_0_4, '0', blocks_streams_to_vector_0, '5']
- [blocks_multiply_conjugate_cc_0_5, '0', blocks_streams_to_vector_0, '6']
- [blocks_multiply_conjugate_cc_0_6, '0', blocks_streams_to_vector_0, '7']
- [blocks_multiply_conjugate_cc_0_7, '0', blocks_streams_to_vector_0, '8']
- [blocks_multiply_conjugate_cc_0_8, '0', blocks_streams_to_vector_0, '1']
- [blocks_multiply_const_xx_0, '0', blocks_multiply_conjugate_cc_0, '1']
- [blocks_multiply_const_xx_0, '0', blocks_multiply_conjugate_cc_0_3, '0']
- [blocks_multiply_const_xx_0, '0', blocks_multiply_conjugate_cc_0_4, '0']
- [blocks_multiply_const_xx_0, '0', blocks_multiply_conjugate_cc_0_5, '0']
- [blocks_multiply_const_xx_0_0, '0', blocks_multiply_conjugate_cc_0_0, '0']
- [blocks_multiply_const_xx_0_0, '0', blocks_multiply_conjugate_cc_0_2, '1']
- [blocks_multiply_const_xx_0_0, '0', blocks_multiply_conjugate_cc_0_5, '1']
- [blocks_multiply_const_xx_0_0, '0', blocks_multiply_conjugate_cc_0_7, '1']
- [blocks_multiply_const_xx_0_1, '0', blocks_multiply_conjugate_cc_0_3, '1']
- [blocks_multiply_const_xx_0_1, '0', blocks_multiply_conjugate_cc_0_6, '0']
- [blocks_multiply_const_xx_0_1, '0', blocks_multiply_conjugate_cc_0_7, '0']
- [blocks_multiply_const_xx_0_1, '0', blocks_multiply_conjugate_cc_0_8, '1']
- [blocks_multiply_const_xx_0_2, '0', blocks_multiply_conjugate_cc_0_0, '1']
- [blocks_multiply_const_xx_0_2, '0', blocks_multiply_conjugate_cc_0_1, '1']
- [blocks_multiply_const_xx_0_2, '0', blocks_multiply_conjugate_cc_0_4, '1']
- [blocks_multiply_const_xx_0_2, '0', blocks_multiply_conjugate_cc_0_6, '1']
- [blocks_multiply_const_xx_0_3, '0', blocks_multiply_conjugate_cc_0, '0']
- [blocks_multiply_const_xx_0_3, '0', blocks_multiply_conjugate_cc_0_1, '0']
- [blocks_multiply_const_xx_0_3, '0', blocks_multiply_conjugate_cc_0_2, '0']
- [blocks_multiply_const_xx_0_3, '0', blocks_multiply_conjugate_cc_0_8, '0']
- [blocks_streams_to_vector_0, '0', single_pole_iir_filter_xx_0, '0']
- [blocks_vector_to_stream_0, '0', blocks_complex_to_float_0, '0']
- [krakensdr_krakensdr_source_0, '0', blocks_delay_0, '0']
- [krakensdr_krakensdr_source_0, '1', blocks_delay_0_0, '0']
- [krakensdr_krakensdr_source_0, '2', blocks_delay_0_0_0, '0']
- [krakensdr_krakensdr_source_0, '3', blocks_delay_0_0_0_0, '0']
- [krakensdr_krakensdr_source_0, '4', blocks_delay_0_0_0_0_0, '0']
- [single_pole_iir_filter_xx_0, '0', blocks_keep_one_in_n_0, '0']

metadata:
  file_format: 1
